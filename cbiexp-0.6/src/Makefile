# Makefile.in generated by automake 1.9.4 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





SOURCES = $(libanalyze_a_SOURCES) $(bicluster_SOURCES) $(build_tsgraph_SOURCES) $(calc_sober_SOURCES) $(calc_truthprobs_SOURCES) $(chi2test_SOURCES) $(cluster_runs_SOURCES) $(collect_parmstats_SOURCES) $(compute_obs_tru_SOURCES) $(compute_nonconst_preds_SOURCES) $(convert_reports_SOURCES) $(decimate_sparse_SOURCES) $(est_parms_SOURCES) $(extract_timestamps_SOURCES) $(find_tsSCC_SOURCES) $(gather_prior_dist_SOURCES) $(gather_prior_truths_SOURCES) $(gen_summary_SOURCES) $(gen_views_SOURCES) $(get_tp_weights_SOURCES) $(get_truth_values_SOURCES) $(get_ts_ordering_SOURCES) $(logreg_SOURCES) $(max_observed_SOURCES) $(oracle_SOURCES) $(partial_order_SOURCES) $(prefilter_SOURCES) $(process_run_flags_SOURCES) $(process_run_labels_SOURCES) $(project_SOURCES) $(sampling_plans_uniform_SOURCES) $(sanity_check_SOURCES) $(sparsity_metrics_SOURCES) $(train_utillog_SOURCES) $(view_clusters_SOURCES) $(xmlify_results_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/cbiexp
pkglibdir = $(libdir)/cbiexp
pkgincludedir = $(includedir)/cbiexp
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = amplify
#am__append_2 = effort
#am__append_3 = plsa
noinst_PROGRAMS = bicluster$(EXEEXT) build_tsgraph$(EXEEXT) \
	calc_sober$(EXEEXT) calc_truthprobs$(EXEEXT) $(am__EXEEXT_1) \
	cluster_runs$(EXEEXT) collect_parmstats$(EXEEXT) \
	compute_nonconst_preds$(EXEEXT) compute-obs-tru$(EXEEXT) \
	convert-reports$(EXEEXT) decimate-sparse$(EXEEXT) \
	est_parms$(EXEEXT) extract-timestamps$(EXEEXT) \
	find_tsSCC$(EXEEXT) gather_prior_dist$(EXEEXT) \
	gather_prior_truths$(EXEEXT) gen-summary$(EXEEXT) \
	gen-views$(EXEEXT) get_tp_weights$(EXEEXT) \
	get_truth_values$(EXEEXT) get_ts_ordering$(EXEEXT) \
	logreg$(EXEEXT) max-observed$(EXEEXT) oracle$(EXEEXT) \
	partial_order$(EXEEXT) prefilter$(EXEEXT) \
	process_run_flags$(EXEEXT) process_run_labels$(EXEEXT) \
	project$(EXEEXT) sampling-plans/uniform$(EXEEXT) \
	sanity_check$(EXEEXT) sparsity-metrics$(EXEEXT) \
	train_utillog$(EXEEXT) view_clusters$(EXEEXT) \
	xmlify-results$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/analysis-rules.mk.in convert_reports.cc \
	decimate-sparse.cc extract_timestamps.cc
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = analysis-rules.mk
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libanalyze_a_AR = $(AR) $(ARFLAGS)
libanalyze_a_LIBADD =
am_libanalyze_a_OBJECTS = AmplifyReport.$(OBJEXT) AutoFD.$(OBJEXT) \
	Bugs.$(OBJEXT) Candidate.$(OBJEXT) ClassifyRuns.$(OBJEXT) \
	CompactReport.$(OBJEXT) Confidence.$(OBJEXT) \
	CullPredicates.$(OBJEXT) Dilute.$(OBJEXT) \
	DynamicLibrary-dl.$(OBJEXT) IndexedPredInfo.$(OBJEXT) \
	Nonconst_PredStats.$(OBJEXT) NumRuns.$(OBJEXT) \
	OutcomeRunSets.$(OBJEXT) PredCoords.$(OBJEXT) \
	PredStats.$(OBJEXT) Bounded.$(OBJEXT) Unbounded.$(OBJEXT) \
	tty.$(OBJEXT) RawReport.$(OBJEXT) ReportReader.$(OBJEXT) \
	Rho.$(OBJEXT) RunBugs.$(OBJEXT) RunsDirectory.$(OBJEXT) \
	RunSet.$(OBJEXT) RunsSplit.$(OBJEXT) SetVector.$(OBJEXT) \
	SiteCoords.$(OBJEXT) SourceDirectory.$(OBJEXT) \
	Stylesheet.$(OBJEXT) TimestampReport.$(OBJEXT) \
	AdjWeightsOptions.$(OBJEXT) TsReportReader.$(OBJEXT) \
	StaticSiteInfo.$(OBJEXT) UtilLogReg.$(OBJEXT) \
	Verbose.$(OBJEXT) ViewPrinter.$(OBJEXT) XMLTemplate.$(OBJEXT) \
	classify_runs.$(OBJEXT) combine.$(OBJEXT) fopen.$(OBJEXT) \
	split_runs.$(OBJEXT) utils.$(OBJEXT)
libanalyze_a_OBJECTS = $(am_libanalyze_a_OBJECTS)
am__EXEEXT_1 = chi2test$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_bicluster_OBJECTS = bicluster.$(OBJEXT)
bicluster_OBJECTS = $(am_bicluster_OBJECTS)
bicluster_DEPENDENCIES = libanalyze.a
am_build_tsgraph_OBJECTS = build_tsgraph-build_tsgraph.$(OBJEXT)
build_tsgraph_OBJECTS = $(am_build_tsgraph_OBJECTS)
build_tsgraph_DEPENDENCIES = libanalyze.a
am_calc_sober_OBJECTS = calc_sober.$(OBJEXT)
calc_sober_OBJECTS = $(am_calc_sober_OBJECTS)
am__DEPENDENCIES_1 =
calc_sober_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_calc_truthprobs_OBJECTS = calc_truthprobs.$(OBJEXT)
calc_truthprobs_OBJECTS = $(am_calc_truthprobs_OBJECTS)
calc_truthprobs_DEPENDENCIES = libanalyze.a
am_chi2test_OBJECTS = chi2test.$(OBJEXT)
chi2test_OBJECTS = $(am_chi2test_OBJECTS)
chi2test_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_cluster_runs_OBJECTS = cluster_runs.$(OBJEXT)
cluster_runs_OBJECTS = $(am_cluster_runs_OBJECTS)
cluster_runs_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_collect_parmstats_OBJECTS = collect_parmstats.$(OBJEXT)
collect_parmstats_OBJECTS = $(am_collect_parmstats_OBJECTS)
collect_parmstats_DEPENDENCIES = libanalyze.a
am_compute_obs_tru_OBJECTS = compute_obs_tru.$(OBJEXT)
compute_obs_tru_OBJECTS = $(am_compute_obs_tru_OBJECTS)
compute_obs_tru_DEPENDENCIES = libanalyze.a
am_compute_nonconst_preds_OBJECTS = compute_nonconst_preds.$(OBJEXT)
compute_nonconst_preds_OBJECTS = $(am_compute_nonconst_preds_OBJECTS)
compute_nonconst_preds_DEPENDENCIES = libanalyze.a \
	$(am__DEPENDENCIES_1)
am_convert_reports_OBJECTS = convert_reports.$(OBJEXT)
convert_reports_OBJECTS = $(am_convert_reports_OBJECTS)
convert_reports_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_decimate_sparse_OBJECTS =  \
	decimate_sparse-decimate-sparse.$(OBJEXT)
decimate_sparse_OBJECTS = $(am_decimate_sparse_OBJECTS)
decimate_sparse_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_est_parms_OBJECTS = est_parms.$(OBJEXT)
est_parms_OBJECTS = $(am_est_parms_OBJECTS)
est_parms_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_extract_timestamps_OBJECTS = extract_timestamps.$(OBJEXT)
extract_timestamps_OBJECTS = $(am_extract_timestamps_OBJECTS)
extract_timestamps_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_find_tsSCC_OBJECTS = find_tsSCC-find_tsSCC.$(OBJEXT)
find_tsSCC_OBJECTS = $(am_find_tsSCC_OBJECTS)
find_tsSCC_DEPENDENCIES = libanalyze.a
am_gather_prior_dist_OBJECTS = gather_prior_dist.$(OBJEXT)
gather_prior_dist_OBJECTS = $(am_gather_prior_dist_OBJECTS)
gather_prior_dist_DEPENDENCIES = libanalyze.a
am_gather_prior_truths_OBJECTS = gather_prior_truths.$(OBJEXT)
gather_prior_truths_OBJECTS = $(am_gather_prior_truths_OBJECTS)
gather_prior_truths_DEPENDENCIES = libanalyze.a
am_gen_summary_OBJECTS = gen_summary.$(OBJEXT)
gen_summary_OBJECTS = $(am_gen_summary_OBJECTS)
gen_summary_DEPENDENCIES = libanalyze.a
am_gen_views_OBJECTS = gen_views.$(OBJEXT)
gen_views_OBJECTS = $(am_gen_views_OBJECTS)
gen_views_DEPENDENCIES = Score/libScore.a libanalyze.a \
	corrective-ranking/libcorrective.a
am_get_tp_weights_OBJECTS = get_tp_weights.$(OBJEXT)
get_tp_weights_OBJECTS = $(am_get_tp_weights_OBJECTS)
get_tp_weights_DEPENDENCIES = libanalyze.a
am_get_truth_values_OBJECTS = get_truth_values.$(OBJEXT)
get_truth_values_OBJECTS = $(am_get_truth_values_OBJECTS)
get_truth_values_DEPENDENCIES = libanalyze.a
am_get_ts_ordering_OBJECTS = get_ts_ordering.$(OBJEXT)
get_ts_ordering_OBJECTS = $(am_get_ts_ordering_OBJECTS)
get_ts_ordering_DEPENDENCIES = libanalyze.a
am_logreg_OBJECTS = logreg.$(OBJEXT)
logreg_OBJECTS = $(am_logreg_OBJECTS)
logreg_DEPENDENCIES = libanalyze.a
am_max_observed_OBJECTS = max-observed.$(OBJEXT)
max_observed_OBJECTS = $(am_max_observed_OBJECTS)
max_observed_DEPENDENCIES = libanalyze.a
am_oracle_OBJECTS = oracle.$(OBJEXT)
oracle_OBJECTS = $(am_oracle_OBJECTS)
oracle_DEPENDENCIES = libanalyze.a
am_partial_order_OBJECTS = partial_order-partial_order.$(OBJEXT)
partial_order_OBJECTS = $(am_partial_order_OBJECTS)
partial_order_DEPENDENCIES = libanalyze.a
am_prefilter_OBJECTS = prefilter.$(OBJEXT)
prefilter_OBJECTS = $(am_prefilter_OBJECTS)
prefilter_DEPENDENCIES = libanalyze.a
am_process_run_flags_OBJECTS = process_run_flags.$(OBJEXT)
process_run_flags_OBJECTS = $(am_process_run_flags_OBJECTS)
process_run_flags_DEPENDENCIES = libanalyze.a
am_process_run_labels_OBJECTS = process_run_labels.$(OBJEXT)
process_run_labels_OBJECTS = $(am_process_run_labels_OBJECTS)
process_run_labels_DEPENDENCIES = libanalyze.a
am_project_OBJECTS = project.$(OBJEXT)
project_OBJECTS = $(am_project_OBJECTS)
project_DEPENDENCIES = Score/libScore.a libanalyze.a
am_sampling_plans_uniform_OBJECTS = uniform.$(OBJEXT)
sampling_plans_uniform_OBJECTS = $(am_sampling_plans_uniform_OBJECTS)
sampling_plans_uniform_DEPENDENCIES = libanalyze.a
am__dirstamp = $(am__leading_dot)dirstamp
am_sanity_check_OBJECTS = sanity_check-sanity_check.$(OBJEXT)
sanity_check_OBJECTS = $(am_sanity_check_OBJECTS)
sanity_check_DEPENDENCIES = libanalyze.a
am_sparsity_metrics_OBJECTS =  \
	sparsity_metrics-sparsity-metrics.$(OBJEXT)
sparsity_metrics_OBJECTS = $(am_sparsity_metrics_OBJECTS)
sparsity_metrics_DEPENDENCIES = libanalyze.a
am_train_utillog_OBJECTS = train_utillog.$(OBJEXT)
train_utillog_OBJECTS = $(am_train_utillog_OBJECTS)
train_utillog_DEPENDENCIES = libanalyze.a $(am__DEPENDENCIES_1)
am_view_clusters_OBJECTS = view_clusters.$(OBJEXT)
view_clusters_OBJECTS = $(am_view_clusters_OBJECTS)
view_clusters_DEPENDENCIES = libanalyze.a
am_xmlify_results_OBJECTS = xmlify-results.$(OBJEXT)
xmlify_results_OBJECTS = $(am_xmlify_results_OBJECTS)
xmlify_results_DEPENDENCIES = libanalyze.a
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config-aux/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) --mode=compile $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/config-aux/ylwrap
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libanalyze_a_SOURCES) $(bicluster_SOURCES) \
	$(build_tsgraph_SOURCES) $(calc_sober_SOURCES) \
	$(calc_truthprobs_SOURCES) $(chi2test_SOURCES) \
	$(cluster_runs_SOURCES) $(collect_parmstats_SOURCES) \
	$(compute_obs_tru_SOURCES) $(compute_nonconst_preds_SOURCES) \
	$(convert_reports_SOURCES) $(decimate_sparse_SOURCES) \
	$(est_parms_SOURCES) $(extract_timestamps_SOURCES) \
	$(find_tsSCC_SOURCES) $(gather_prior_dist_SOURCES) \
	$(gather_prior_truths_SOURCES) $(gen_summary_SOURCES) \
	$(gen_views_SOURCES) $(get_tp_weights_SOURCES) \
	$(get_truth_values_SOURCES) $(get_ts_ordering_SOURCES) \
	$(logreg_SOURCES) $(max_observed_SOURCES) $(oracle_SOURCES) \
	$(partial_order_SOURCES) $(prefilter_SOURCES) \
	$(process_run_flags_SOURCES) $(process_run_labels_SOURCES) \
	$(project_SOURCES) $(sampling_plans_uniform_SOURCES) \
	$(sanity_check_SOURCES) $(sparsity_metrics_SOURCES) \
	$(train_utillog_SOURCES) $(view_clusters_SOURCES) \
	$(xmlify_results_SOURCES)
DIST_SOURCES = $(libanalyze_a_SOURCES) $(bicluster_SOURCES) \
	$(build_tsgraph_SOURCES) $(calc_sober_SOURCES) \
	$(calc_truthprobs_SOURCES) $(chi2test_SOURCES) \
	$(cluster_runs_SOURCES) $(collect_parmstats_SOURCES) \
	$(compute_obs_tru_SOURCES) $(compute_nonconst_preds_SOURCES) \
	$(convert_reports_SOURCES) $(decimate_sparse_SOURCES) \
	$(est_parms_SOURCES) $(extract_timestamps_SOURCES) \
	$(find_tsSCC_SOURCES) $(gather_prior_dist_SOURCES) \
	$(gather_prior_truths_SOURCES) $(gen_summary_SOURCES) \
	$(gen_views_SOURCES) $(get_tp_weights_SOURCES) \
	$(get_truth_values_SOURCES) $(get_ts_ordering_SOURCES) \
	$(logreg_SOURCES) $(max_observed_SOURCES) $(oracle_SOURCES) \
	$(partial_order_SOURCES) $(prefilter_SOURCES) \
	$(process_run_flags_SOURCES) $(process_run_labels_SOURCES) \
	$(project_SOURCES) $(sampling_plans_uniform_SOURCES) \
	$(sanity_check_SOURCES) $(sparsity_metrics_SOURCES) \
	$(train_utillog_SOURCES) $(view_clusters_SOURCES) \
	$(xmlify_results_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/wslee/project/cbi/cbiexp-0.6/config-aux/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/wslee/project/cbi/cbiexp-0.6/config-aux/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/wslee/project/cbi/cbiexp-0.6/config-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/wslee/project/cbi/cbiexp-0.6/config-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/wslee/project/cbi/cbiexp-0.6/config-aux/missing --run automake-1.9
AWK = mawk
BOOST_CPPFLAGS = -I/home/wslee/project/cbi/cbiexp-0.6/../boost_1_39_0/
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CSURF_ROOT = /p/cbi/public/codesurfer
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_AMPLIFY_FALSE = 
ENABLE_AMPLIFY_NATIVE_FALSE = 
ENABLE_AMPLIFY_NATIVE_TRUE = #
ENABLE_AMPLIFY_PROFILING_FALSE = 
ENABLE_AMPLIFY_PROFILING_TRUE = #
ENABLE_AMPLIFY_TRUE = #
ENABLE_LINECOLORING_FALSE = 
ENABLE_LINECOLORING_TRUE = #
ENABLE_PLSA_FALSE = 
ENABLE_PLSA_TRUE = #
EXEEXT = 
F77 = 
FFLAGS = 
GSL_CFLAGS = -I/usr/include
GSL_CONFIG = /usr/bin/gsl-config
GSL_LIBS = -L/usr/lib -lgsl -lgslcblas -lm
HAVE_CODESURFER_FALSE = 
HAVE_CODESURFER_TRUE = #
HAVE_GSL_CDF = 1
HAVE_GSL_CDF_FALSE = #
HAVE_GSL_CDF_TRUE = 
HAVE_MEX = 
HAVE_MEX_FALSE = 
HAVE_MEX_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/wslee/project/cbi/cbiexp-0.6/config-aux/missing --run makeinfo
OBJEXT = o
PACKAGE = cbiexp
PACKAGE_BUGREPORT = 
PACKAGE_NAME = cbiexp
PACKAGE_STRING = cbiexp 0.6
PACKAGE_TARNAME = cbiexp
PACKAGE_VERSION = 0.6
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.6
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/wslee/project/cbi/cbiexp-0.6/config-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sampler_cc = /usr/local/bin/sampler-cc
sampler_tooldir = /usr/local/lib/sampler/tools
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = corrective-ranking evaluateplsa fromplsa matlab \
	never-reached Score symmetric $(am__append_1) $(am__append_2) \
	$(am__append_3)
DIST_SUBDIRS = $(SUBDIRS) effort
AM_CPPFLAGS = -W -Wall  -Wformat=2 $(BOOST_CPPFLAGS)
chi2test = chi2test
noinst_SCRIPTS = \
	decimate-all				\
	htmlify-sources				\
	map-sites				\
	sampling-plans/inverse			\
	sampling-plans/rare			\
	static-site-info			\
	top-rho

noinst_LIBRARIES = libanalyze.a
bicluster_SOURCES = bicluster.cc
bicluster_LDADD = libanalyze.a
build_tsgraph_SOURCES = build_tsgraph.cc
build_tsgraph_LDADD = libanalyze.a -ldl
build_tsgraph_CPPFLAGS = $(AM_CPPFLAGS) -Wno-uninitialized
calc_sober_SOURCES = calc_sober.cc
calc_sober_LDADD = libanalyze.a $(GSL_LIBS) -ldl
calc_truthprobs_SOURCES = calc_truthprobs.cc
calc_truthprobs_LDADD = libanalyze.a -ldl
chi2test_SOURCES = chi2test.cc
chi2test_LDADD = libanalyze.a $(GSL_LIBS)
cluster_runs_SOURCES = cluster_runs.cc
cluster_runs_LDADD = libanalyze.a $(GSL_LIBS) -ldl
collect_parmstats_SOURCES = collect_parmstats.cc
collect_parmstats_LDADD = libanalyze.a -ldl
compute_obs_tru_SOURCES = compute_obs_tru.cc
compute_obs_tru_LDADD = libanalyze.a -ldl
compute_nonconst_preds_SOURCES = compute_nonconst_preds.cc
compute_nonconst_preds_LDADD = libanalyze.a -ldl $(GSL_LIBS)
convert_reports_SOURCES = convert_reports.ll
convert_reports_LDADD = libanalyze.a -ldl $(LEXLIB)
decimate_sparse_SOURCES = decimate-sparse.ll
decimate_sparse_INCLUDES = $(GSL_CFLAGS)
decimate_sparse_CPPFLAGS = -Wno-sign-compare
decimate_sparse_LDADD = libanalyze.a $(GSL_LIBS)
est_parms_SOURCES = est_parms.cc
est_parms_LDADD = libanalyze.a $(GSL_LIBS)
extract_timestamps_SOURCES = extract_timestamps.ll
extract_timestamps_LDADD = libanalyze.a -ldl $(LEXLIB)
find_tsSCC_SOURCES = find_tsSCC.cc
find_tsSCC_LDADD = libanalyze.a -ldl
find_tsSCC_CPPFLAGS = $(AM_CPPFLAGS) -Wno-uninitialized
gather_prior_dist_SOURCES = gather_prior_dist.cc
gather_prior_dist_LDADD = libanalyze.a -ldl
gather_prior_truths_SOURCES = gather_prior_truths.cc
gather_prior_truths_LDADD = libanalyze.a -ldl
gen_summary_SOURCES = gen_summary.cc
gen_summary_LDADD = libanalyze.a -ldl
gen_views_SOURCES = gen_views.cc
gen_views_LDADD = Score/libScore.a libanalyze.a corrective-ranking/libcorrective.a -ldl
get_tp_weights_SOURCES = get_tp_weights.cc
get_tp_weights_LDADD = libanalyze.a -ldl
get_truth_values_SOURCES = get_truth_values.cc
get_truth_values_LDADD = libanalyze.a -ldl
get_ts_ordering_SOURCES = get_ts_ordering.cc
get_ts_ordering_LDADD = libanalyze.a -ldl
logreg_SOURCES = logreg.cc
logreg_LDADD = libanalyze.a -ldl
max_observed_SOURCES = max-observed.cc
max_observed_LDADD = libanalyze.a -ldl
oracle_SOURCES = oracle.cc
oracle_LDADD = libanalyze.a -ldl
partial_order_SOURCES = partial_order.cc
partial_order_LDADD = libanalyze.a -ldl
partial_order_CPPFLAGS = $(AM_CPPFLAGS) -Wno-uninitialized -Wno-unused
prefilter_SOURCES = prefilter.cc
prefilter_LDADD = libanalyze.a -ldl
process_run_flags_SOURCES = process_run_flags.cc
process_run_flags_LDADD = libanalyze.a
process_run_labels_SOURCES = process_run_labels.cc
process_run_labels_LDADD = libanalyze.a
project_SOURCES = project.cc
project_LDADD = Score/libScore.a libanalyze.a -ldl
sampling_plans_uniform_SOURCES = sampling-plans/uniform.cc
sampling_plans_uniform_LDADD = libanalyze.a -ldl
sanity_check_SOURCES = sanity_check.cc
sanity_check_LDADD = libanalyze.a -ldl
sanity_check_CPPFLAGS = $(AM_CPPFLAGS) -Wno-uninitialized
sparsity_metrics_SOURCES = sparsity-metrics.cc
sparsity_metrics_LDADD = libanalyze.a -ldl
sparsity_metrics_CPPFLAGS = $(AM_CPPFLAGS) -Wno-uninitialized
train_utillog_SOURCES = train_utillog.cc
train_utillog_LDADD = libanalyze.a -ldl $(GSL_LIBS)
view_clusters_SOURCES = view_clusters.cc
view_clusters_LDADD = libanalyze.a
xmlify_results_SOURCES = xmlify-results.cc
xmlify_results_LDADD = libanalyze.a -ldl

########################################################################
libanalyze_a_SOURCES = \
	AmplifyReport.cc			\
	AmplifyReport.h				\
	AutoFD.cc				\
	AutoFD.h				\
	Bugs.cc					\
	Bugs.h					\
	Candidate.cc				\
	Candidate.h				\
	ClassifyRuns.cc				\
	ClassifyRuns.h				\
	CompactReport.cc			\
	CompactReport.h				\
	Confidence.cc				\
	Confidence.h				\
	Counts.h				\
	CullPredicates.cc			\
	CullPredicates.h			\
	Dilute.cc				\
	Dilute.h				\
	DiscreteDist.h				\
	DynamicLibrary.h			\
	DynamicLibrary-dl.cc			\
	DynamicLibrary-dl.h			\
	IndexedPredInfo.cc			\
	IndexedPredInfo.h			\
	MappedArray.h				\
	Matrix.h				\
	Nonconst_PredStats.cc			\
	Nonconst_PredStats.h			\
	NumRuns.cc				\
	NumRuns.h				\
	OutcomeRunSets.cc			\
	OutcomeRunSets.h			\
	PredCoords.cc				\
	PredCoords.h				\
	PredStats.cc				\
	PredStats.h				\
	Progress/Bounded.cc			\
	Progress/Bounded.h			\
	Progress/Unbounded.cc			\
	Progress/Unbounded.h			\
	Progress/tty.cc				\
	Progress/tty.h				\
	RawReport.cc				\
	RawReport.h				\
	ReportReader.cc				\
	ReportReader.h				\
	Rho.cc					\
	Rho.h					\
	RunBugs.cc				\
	RunBugs.h				\
	RunsDirectory.cc			\
	RunsDirectory.h				\
	RunSet.cc				\
	RunSet.h				\
	RunsSplit.cc				\
	RunsSplit.h				\
	SetVector.cc				\
	SetVector.h				\
	SiteCoords.cc				\
	SiteCoords.h				\
	SourceDirectory.cc			\
	SourceDirectory.h			\
	Stylesheet.cc				\
	Stylesheet.h				\
	TimestampReport.cc			\
	TimestampReport.h			\
	AdjWeightsOptions.cc			\
	AdjWeightsOptions.h			\
	TsReportReader.cc			\
	TsReportReader.h			\
	StaticSiteInfo.cc			\
	StaticSiteInfo.h			\
	UtilLogReg.cc				\
	UtilLogReg.h				\
	Verbose.cc				\
	Verbose.h				\
	ViewPrinter.cc				\
	ViewPrinter.h				\
	XMLTemplate.cc				\
	XMLTemplate.h				\
	arguments.h				\
	classify_runs.cc			\
	classify_runs.h				\
	combine.cc				\
	combine.h				\
	fopen.cc				\
	fopen.h					\
	preds.h					\
	site_t.h				\
	sorts.h					\
	split_runs.cc				\
	split_runs.h				\
	termination.h				\
	timestamp.h				\
	unit_t.h				\
	utils.cc				\
	utils.h


########################################################################
EXTRA_DIST = \
	$(noinst_SCRIPTS)			\
	bug-o-meter.css				\
	bug-o-meter.dtd				\
	bug-o-meter.js				\
	bug-o-meter.xsl				\
	corrected-view.dtd			\
	corrected-view.xsl			\
	DecimateAll.pm				\
	link-cell.css				\
	logo.css				\
	logo.xsl				\
	logreg.dtd				\
	logreg.xsl				\
	operand.dtd				\
	operands.xsl				\
	predictor-info.dtd			\
	pred-scores.css				\
	pred-scores.dtd				\
	pred-scores.xsl				\
	projected-view.dtd			\
	projected-view.xsl			\
	projections.dtd				\
	projections.xml				\
	rho.dtd					\
	rho.xsl					\
	schemes.dtd				\
	schemes.xml				\
	scores.css				\
	scores.dtd				\
	scores.xsl				\
	sorts.dtd				\
	sorts.xml				\
	static-site-info.dtd			\
	summary.css				\
	summary.dtd				\
	summary.xsl				\
	symmetric.css				\
	symmetric.dtd				\
	symmetric.xsl				\
	view.css				\
	view.dtd				\
	view.xsl

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .ll .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
analysis-rules.mk: $(top_builddir)/config.status $(srcdir)/analysis-rules.mk.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libanalyze.a: $(libanalyze_a_OBJECTS) $(libanalyze_a_DEPENDENCIES) 
	-rm -f libanalyze.a
	$(libanalyze_a_AR) libanalyze.a $(libanalyze_a_OBJECTS) $(libanalyze_a_LIBADD)
	$(RANLIB) libanalyze.a

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bicluster$(EXEEXT): $(bicluster_OBJECTS) $(bicluster_DEPENDENCIES) 
	@rm -f bicluster$(EXEEXT)
	$(CXXLINK) $(bicluster_LDFLAGS) $(bicluster_OBJECTS) $(bicluster_LDADD) $(LIBS)
build_tsgraph$(EXEEXT): $(build_tsgraph_OBJECTS) $(build_tsgraph_DEPENDENCIES) 
	@rm -f build_tsgraph$(EXEEXT)
	$(CXXLINK) $(build_tsgraph_LDFLAGS) $(build_tsgraph_OBJECTS) $(build_tsgraph_LDADD) $(LIBS)
calc_sober$(EXEEXT): $(calc_sober_OBJECTS) $(calc_sober_DEPENDENCIES) 
	@rm -f calc_sober$(EXEEXT)
	$(CXXLINK) $(calc_sober_LDFLAGS) $(calc_sober_OBJECTS) $(calc_sober_LDADD) $(LIBS)
calc_truthprobs$(EXEEXT): $(calc_truthprobs_OBJECTS) $(calc_truthprobs_DEPENDENCIES) 
	@rm -f calc_truthprobs$(EXEEXT)
	$(CXXLINK) $(calc_truthprobs_LDFLAGS) $(calc_truthprobs_OBJECTS) $(calc_truthprobs_LDADD) $(LIBS)
chi2test$(EXEEXT): $(chi2test_OBJECTS) $(chi2test_DEPENDENCIES) 
	@rm -f chi2test$(EXEEXT)
	$(CXXLINK) $(chi2test_LDFLAGS) $(chi2test_OBJECTS) $(chi2test_LDADD) $(LIBS)
cluster_runs$(EXEEXT): $(cluster_runs_OBJECTS) $(cluster_runs_DEPENDENCIES) 
	@rm -f cluster_runs$(EXEEXT)
	$(CXXLINK) $(cluster_runs_LDFLAGS) $(cluster_runs_OBJECTS) $(cluster_runs_LDADD) $(LIBS)
collect_parmstats$(EXEEXT): $(collect_parmstats_OBJECTS) $(collect_parmstats_DEPENDENCIES) 
	@rm -f collect_parmstats$(EXEEXT)
	$(CXXLINK) $(collect_parmstats_LDFLAGS) $(collect_parmstats_OBJECTS) $(collect_parmstats_LDADD) $(LIBS)
compute-obs-tru$(EXEEXT): $(compute_obs_tru_OBJECTS) $(compute_obs_tru_DEPENDENCIES) 
	@rm -f compute-obs-tru$(EXEEXT)
	$(CXXLINK) $(compute_obs_tru_LDFLAGS) $(compute_obs_tru_OBJECTS) $(compute_obs_tru_LDADD) $(LIBS)
compute_nonconst_preds$(EXEEXT): $(compute_nonconst_preds_OBJECTS) $(compute_nonconst_preds_DEPENDENCIES) 
	@rm -f compute_nonconst_preds$(EXEEXT)
	$(CXXLINK) $(compute_nonconst_preds_LDFLAGS) $(compute_nonconst_preds_OBJECTS) $(compute_nonconst_preds_LDADD) $(LIBS)
convert-reports$(EXEEXT): $(convert_reports_OBJECTS) $(convert_reports_DEPENDENCIES) 
	@rm -f convert-reports$(EXEEXT)
	$(CXXLINK) $(convert_reports_LDFLAGS) $(convert_reports_OBJECTS) $(convert_reports_LDADD) $(LIBS)
decimate-sparse$(EXEEXT): $(decimate_sparse_OBJECTS) $(decimate_sparse_DEPENDENCIES) 
	@rm -f decimate-sparse$(EXEEXT)
	$(CXXLINK) $(decimate_sparse_LDFLAGS) $(decimate_sparse_OBJECTS) $(decimate_sparse_LDADD) $(LIBS)
est_parms$(EXEEXT): $(est_parms_OBJECTS) $(est_parms_DEPENDENCIES) 
	@rm -f est_parms$(EXEEXT)
	$(CXXLINK) $(est_parms_LDFLAGS) $(est_parms_OBJECTS) $(est_parms_LDADD) $(LIBS)
extract-timestamps$(EXEEXT): $(extract_timestamps_OBJECTS) $(extract_timestamps_DEPENDENCIES) 
	@rm -f extract-timestamps$(EXEEXT)
	$(CXXLINK) $(extract_timestamps_LDFLAGS) $(extract_timestamps_OBJECTS) $(extract_timestamps_LDADD) $(LIBS)
find_tsSCC$(EXEEXT): $(find_tsSCC_OBJECTS) $(find_tsSCC_DEPENDENCIES) 
	@rm -f find_tsSCC$(EXEEXT)
	$(CXXLINK) $(find_tsSCC_LDFLAGS) $(find_tsSCC_OBJECTS) $(find_tsSCC_LDADD) $(LIBS)
gather_prior_dist$(EXEEXT): $(gather_prior_dist_OBJECTS) $(gather_prior_dist_DEPENDENCIES) 
	@rm -f gather_prior_dist$(EXEEXT)
	$(CXXLINK) $(gather_prior_dist_LDFLAGS) $(gather_prior_dist_OBJECTS) $(gather_prior_dist_LDADD) $(LIBS)
gather_prior_truths$(EXEEXT): $(gather_prior_truths_OBJECTS) $(gather_prior_truths_DEPENDENCIES) 
	@rm -f gather_prior_truths$(EXEEXT)
	$(CXXLINK) $(gather_prior_truths_LDFLAGS) $(gather_prior_truths_OBJECTS) $(gather_prior_truths_LDADD) $(LIBS)
gen-summary$(EXEEXT): $(gen_summary_OBJECTS) $(gen_summary_DEPENDENCIES) 
	@rm -f gen-summary$(EXEEXT)
	$(CXXLINK) $(gen_summary_LDFLAGS) $(gen_summary_OBJECTS) $(gen_summary_LDADD) $(LIBS)
gen-views$(EXEEXT): $(gen_views_OBJECTS) $(gen_views_DEPENDENCIES) 
	@rm -f gen-views$(EXEEXT)
	$(CXXLINK) $(gen_views_LDFLAGS) $(gen_views_OBJECTS) $(gen_views_LDADD) $(LIBS)
get_tp_weights$(EXEEXT): $(get_tp_weights_OBJECTS) $(get_tp_weights_DEPENDENCIES) 
	@rm -f get_tp_weights$(EXEEXT)
	$(CXXLINK) $(get_tp_weights_LDFLAGS) $(get_tp_weights_OBJECTS) $(get_tp_weights_LDADD) $(LIBS)
get_truth_values$(EXEEXT): $(get_truth_values_OBJECTS) $(get_truth_values_DEPENDENCIES) 
	@rm -f get_truth_values$(EXEEXT)
	$(CXXLINK) $(get_truth_values_LDFLAGS) $(get_truth_values_OBJECTS) $(get_truth_values_LDADD) $(LIBS)
get_ts_ordering$(EXEEXT): $(get_ts_ordering_OBJECTS) $(get_ts_ordering_DEPENDENCIES) 
	@rm -f get_ts_ordering$(EXEEXT)
	$(CXXLINK) $(get_ts_ordering_LDFLAGS) $(get_ts_ordering_OBJECTS) $(get_ts_ordering_LDADD) $(LIBS)
logreg$(EXEEXT): $(logreg_OBJECTS) $(logreg_DEPENDENCIES) 
	@rm -f logreg$(EXEEXT)
	$(CXXLINK) $(logreg_LDFLAGS) $(logreg_OBJECTS) $(logreg_LDADD) $(LIBS)
max-observed$(EXEEXT): $(max_observed_OBJECTS) $(max_observed_DEPENDENCIES) 
	@rm -f max-observed$(EXEEXT)
	$(CXXLINK) $(max_observed_LDFLAGS) $(max_observed_OBJECTS) $(max_observed_LDADD) $(LIBS)
oracle$(EXEEXT): $(oracle_OBJECTS) $(oracle_DEPENDENCIES) 
	@rm -f oracle$(EXEEXT)
	$(CXXLINK) $(oracle_LDFLAGS) $(oracle_OBJECTS) $(oracle_LDADD) $(LIBS)
partial_order$(EXEEXT): $(partial_order_OBJECTS) $(partial_order_DEPENDENCIES) 
	@rm -f partial_order$(EXEEXT)
	$(CXXLINK) $(partial_order_LDFLAGS) $(partial_order_OBJECTS) $(partial_order_LDADD) $(LIBS)
prefilter$(EXEEXT): $(prefilter_OBJECTS) $(prefilter_DEPENDENCIES) 
	@rm -f prefilter$(EXEEXT)
	$(CXXLINK) $(prefilter_LDFLAGS) $(prefilter_OBJECTS) $(prefilter_LDADD) $(LIBS)
process_run_flags$(EXEEXT): $(process_run_flags_OBJECTS) $(process_run_flags_DEPENDENCIES) 
	@rm -f process_run_flags$(EXEEXT)
	$(CXXLINK) $(process_run_flags_LDFLAGS) $(process_run_flags_OBJECTS) $(process_run_flags_LDADD) $(LIBS)
process_run_labels$(EXEEXT): $(process_run_labels_OBJECTS) $(process_run_labels_DEPENDENCIES) 
	@rm -f process_run_labels$(EXEEXT)
	$(CXXLINK) $(process_run_labels_LDFLAGS) $(process_run_labels_OBJECTS) $(process_run_labels_LDADD) $(LIBS)
project$(EXEEXT): $(project_OBJECTS) $(project_DEPENDENCIES) 
	@rm -f project$(EXEEXT)
	$(CXXLINK) $(project_LDFLAGS) $(project_OBJECTS) $(project_LDADD) $(LIBS)
sampling-plans/$(am__dirstamp):
	@$(mkdir_p) sampling-plans
	@: > sampling-plans/$(am__dirstamp)
sampling-plans/uniform$(EXEEXT): $(sampling_plans_uniform_OBJECTS) $(sampling_plans_uniform_DEPENDENCIES) sampling-plans/$(am__dirstamp)
	@rm -f sampling-plans/uniform$(EXEEXT)
	$(CXXLINK) $(sampling_plans_uniform_LDFLAGS) $(sampling_plans_uniform_OBJECTS) $(sampling_plans_uniform_LDADD) $(LIBS)
sanity_check$(EXEEXT): $(sanity_check_OBJECTS) $(sanity_check_DEPENDENCIES) 
	@rm -f sanity_check$(EXEEXT)
	$(CXXLINK) $(sanity_check_LDFLAGS) $(sanity_check_OBJECTS) $(sanity_check_LDADD) $(LIBS)
sparsity-metrics$(EXEEXT): $(sparsity_metrics_OBJECTS) $(sparsity_metrics_DEPENDENCIES) 
	@rm -f sparsity-metrics$(EXEEXT)
	$(CXXLINK) $(sparsity_metrics_LDFLAGS) $(sparsity_metrics_OBJECTS) $(sparsity_metrics_LDADD) $(LIBS)
train_utillog$(EXEEXT): $(train_utillog_OBJECTS) $(train_utillog_DEPENDENCIES) 
	@rm -f train_utillog$(EXEEXT)
	$(CXXLINK) $(train_utillog_LDFLAGS) $(train_utillog_OBJECTS) $(train_utillog_LDADD) $(LIBS)
view_clusters$(EXEEXT): $(view_clusters_OBJECTS) $(view_clusters_DEPENDENCIES) 
	@rm -f view_clusters$(EXEEXT)
	$(CXXLINK) $(view_clusters_LDFLAGS) $(view_clusters_OBJECTS) $(view_clusters_LDADD) $(LIBS)
xmlify-results$(EXEEXT): $(xmlify_results_OBJECTS) $(xmlify_results_DEPENDENCIES) 
	@rm -f xmlify-results$(EXEEXT)
	$(CXXLINK) $(xmlify_results_LDFLAGS) $(xmlify_results_OBJECTS) $(xmlify_results_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AdjWeightsOptions.Po
include ./$(DEPDIR)/AmplifyReport.Po
include ./$(DEPDIR)/AutoFD.Po
include ./$(DEPDIR)/Bounded.Po
include ./$(DEPDIR)/Bugs.Po
include ./$(DEPDIR)/Candidate.Po
include ./$(DEPDIR)/ClassifyRuns.Po
include ./$(DEPDIR)/CompactReport.Po
include ./$(DEPDIR)/Confidence.Po
include ./$(DEPDIR)/CullPredicates.Po
include ./$(DEPDIR)/Dilute.Po
include ./$(DEPDIR)/DynamicLibrary-dl.Po
include ./$(DEPDIR)/IndexedPredInfo.Po
include ./$(DEPDIR)/Nonconst_PredStats.Po
include ./$(DEPDIR)/NumRuns.Po
include ./$(DEPDIR)/OutcomeRunSets.Po
include ./$(DEPDIR)/PredCoords.Po
include ./$(DEPDIR)/PredStats.Po
include ./$(DEPDIR)/RawReport.Po
include ./$(DEPDIR)/ReportReader.Po
include ./$(DEPDIR)/Rho.Po
include ./$(DEPDIR)/RunBugs.Po
include ./$(DEPDIR)/RunSet.Po
include ./$(DEPDIR)/RunsDirectory.Po
include ./$(DEPDIR)/RunsSplit.Po
include ./$(DEPDIR)/SetVector.Po
include ./$(DEPDIR)/SiteCoords.Po
include ./$(DEPDIR)/SourceDirectory.Po
include ./$(DEPDIR)/StaticSiteInfo.Po
include ./$(DEPDIR)/Stylesheet.Po
include ./$(DEPDIR)/TimestampReport.Po
include ./$(DEPDIR)/TsReportReader.Po
include ./$(DEPDIR)/Unbounded.Po
include ./$(DEPDIR)/UtilLogReg.Po
include ./$(DEPDIR)/Verbose.Po
include ./$(DEPDIR)/ViewPrinter.Po
include ./$(DEPDIR)/XMLTemplate.Po
include ./$(DEPDIR)/bicluster.Po
include ./$(DEPDIR)/build_tsgraph-build_tsgraph.Po
include ./$(DEPDIR)/calc_sober.Po
include ./$(DEPDIR)/calc_truthprobs.Po
include ./$(DEPDIR)/chi2test.Po
include ./$(DEPDIR)/classify_runs.Po
include ./$(DEPDIR)/cluster_runs.Po
include ./$(DEPDIR)/collect_parmstats.Po
include ./$(DEPDIR)/combine.Po
include ./$(DEPDIR)/compute_nonconst_preds.Po
include ./$(DEPDIR)/compute_obs_tru.Po
include ./$(DEPDIR)/convert_reports.Po
include ./$(DEPDIR)/decimate_sparse-decimate-sparse.Po
include ./$(DEPDIR)/est_parms.Po
include ./$(DEPDIR)/extract_timestamps.Po
include ./$(DEPDIR)/find_tsSCC-find_tsSCC.Po
include ./$(DEPDIR)/fopen.Po
include ./$(DEPDIR)/gather_prior_dist.Po
include ./$(DEPDIR)/gather_prior_truths.Po
include ./$(DEPDIR)/gen_summary.Po
include ./$(DEPDIR)/gen_views.Po
include ./$(DEPDIR)/get_tp_weights.Po
include ./$(DEPDIR)/get_truth_values.Po
include ./$(DEPDIR)/get_ts_ordering.Po
include ./$(DEPDIR)/logreg.Po
include ./$(DEPDIR)/max-observed.Po
include ./$(DEPDIR)/oracle.Po
include ./$(DEPDIR)/partial_order-partial_order.Po
include ./$(DEPDIR)/prefilter.Po
include ./$(DEPDIR)/process_run_flags.Po
include ./$(DEPDIR)/process_run_labels.Po
include ./$(DEPDIR)/project.Po
include ./$(DEPDIR)/sanity_check-sanity_check.Po
include ./$(DEPDIR)/sparsity_metrics-sparsity-metrics.Po
include ./$(DEPDIR)/split_runs.Po
include ./$(DEPDIR)/train_utillog.Po
include ./$(DEPDIR)/tty.Po
include ./$(DEPDIR)/uniform.Po
include ./$(DEPDIR)/utils.Po
include ./$(DEPDIR)/view_clusters.Po
include ./$(DEPDIR)/xmlify-results.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

Bounded.o: Progress/Bounded.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Bounded.o -MD -MP -MF "$(DEPDIR)/Bounded.Tpo" -c -o Bounded.o `test -f 'Progress/Bounded.cc' || echo '$(srcdir)/'`Progress/Bounded.cc; \
	then mv -f "$(DEPDIR)/Bounded.Tpo" "$(DEPDIR)/Bounded.Po"; else rm -f "$(DEPDIR)/Bounded.Tpo"; exit 1; fi
#	source='Progress/Bounded.cc' object='Bounded.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Bounded.o `test -f 'Progress/Bounded.cc' || echo '$(srcdir)/'`Progress/Bounded.cc

Bounded.obj: Progress/Bounded.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Bounded.obj -MD -MP -MF "$(DEPDIR)/Bounded.Tpo" -c -o Bounded.obj `if test -f 'Progress/Bounded.cc'; then $(CYGPATH_W) 'Progress/Bounded.cc'; else $(CYGPATH_W) '$(srcdir)/Progress/Bounded.cc'; fi`; \
	then mv -f "$(DEPDIR)/Bounded.Tpo" "$(DEPDIR)/Bounded.Po"; else rm -f "$(DEPDIR)/Bounded.Tpo"; exit 1; fi
#	source='Progress/Bounded.cc' object='Bounded.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Bounded.obj `if test -f 'Progress/Bounded.cc'; then $(CYGPATH_W) 'Progress/Bounded.cc'; else $(CYGPATH_W) '$(srcdir)/Progress/Bounded.cc'; fi`

Unbounded.o: Progress/Unbounded.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Unbounded.o -MD -MP -MF "$(DEPDIR)/Unbounded.Tpo" -c -o Unbounded.o `test -f 'Progress/Unbounded.cc' || echo '$(srcdir)/'`Progress/Unbounded.cc; \
	then mv -f "$(DEPDIR)/Unbounded.Tpo" "$(DEPDIR)/Unbounded.Po"; else rm -f "$(DEPDIR)/Unbounded.Tpo"; exit 1; fi
#	source='Progress/Unbounded.cc' object='Unbounded.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Unbounded.o `test -f 'Progress/Unbounded.cc' || echo '$(srcdir)/'`Progress/Unbounded.cc

Unbounded.obj: Progress/Unbounded.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Unbounded.obj -MD -MP -MF "$(DEPDIR)/Unbounded.Tpo" -c -o Unbounded.obj `if test -f 'Progress/Unbounded.cc'; then $(CYGPATH_W) 'Progress/Unbounded.cc'; else $(CYGPATH_W) '$(srcdir)/Progress/Unbounded.cc'; fi`; \
	then mv -f "$(DEPDIR)/Unbounded.Tpo" "$(DEPDIR)/Unbounded.Po"; else rm -f "$(DEPDIR)/Unbounded.Tpo"; exit 1; fi
#	source='Progress/Unbounded.cc' object='Unbounded.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Unbounded.obj `if test -f 'Progress/Unbounded.cc'; then $(CYGPATH_W) 'Progress/Unbounded.cc'; else $(CYGPATH_W) '$(srcdir)/Progress/Unbounded.cc'; fi`

tty.o: Progress/tty.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tty.o -MD -MP -MF "$(DEPDIR)/tty.Tpo" -c -o tty.o `test -f 'Progress/tty.cc' || echo '$(srcdir)/'`Progress/tty.cc; \
	then mv -f "$(DEPDIR)/tty.Tpo" "$(DEPDIR)/tty.Po"; else rm -f "$(DEPDIR)/tty.Tpo"; exit 1; fi
#	source='Progress/tty.cc' object='tty.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tty.o `test -f 'Progress/tty.cc' || echo '$(srcdir)/'`Progress/tty.cc

tty.obj: Progress/tty.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tty.obj -MD -MP -MF "$(DEPDIR)/tty.Tpo" -c -o tty.obj `if test -f 'Progress/tty.cc'; then $(CYGPATH_W) 'Progress/tty.cc'; else $(CYGPATH_W) '$(srcdir)/Progress/tty.cc'; fi`; \
	then mv -f "$(DEPDIR)/tty.Tpo" "$(DEPDIR)/tty.Po"; else rm -f "$(DEPDIR)/tty.Tpo"; exit 1; fi
#	source='Progress/tty.cc' object='tty.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tty.obj `if test -f 'Progress/tty.cc'; then $(CYGPATH_W) 'Progress/tty.cc'; else $(CYGPATH_W) '$(srcdir)/Progress/tty.cc'; fi`

build_tsgraph-build_tsgraph.o: build_tsgraph.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(build_tsgraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT build_tsgraph-build_tsgraph.o -MD -MP -MF "$(DEPDIR)/build_tsgraph-build_tsgraph.Tpo" -c -o build_tsgraph-build_tsgraph.o `test -f 'build_tsgraph.cc' || echo '$(srcdir)/'`build_tsgraph.cc; \
	then mv -f "$(DEPDIR)/build_tsgraph-build_tsgraph.Tpo" "$(DEPDIR)/build_tsgraph-build_tsgraph.Po"; else rm -f "$(DEPDIR)/build_tsgraph-build_tsgraph.Tpo"; exit 1; fi
#	source='build_tsgraph.cc' object='build_tsgraph-build_tsgraph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(build_tsgraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o build_tsgraph-build_tsgraph.o `test -f 'build_tsgraph.cc' || echo '$(srcdir)/'`build_tsgraph.cc

build_tsgraph-build_tsgraph.obj: build_tsgraph.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(build_tsgraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT build_tsgraph-build_tsgraph.obj -MD -MP -MF "$(DEPDIR)/build_tsgraph-build_tsgraph.Tpo" -c -o build_tsgraph-build_tsgraph.obj `if test -f 'build_tsgraph.cc'; then $(CYGPATH_W) 'build_tsgraph.cc'; else $(CYGPATH_W) '$(srcdir)/build_tsgraph.cc'; fi`; \
	then mv -f "$(DEPDIR)/build_tsgraph-build_tsgraph.Tpo" "$(DEPDIR)/build_tsgraph-build_tsgraph.Po"; else rm -f "$(DEPDIR)/build_tsgraph-build_tsgraph.Tpo"; exit 1; fi
#	source='build_tsgraph.cc' object='build_tsgraph-build_tsgraph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(build_tsgraph_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o build_tsgraph-build_tsgraph.obj `if test -f 'build_tsgraph.cc'; then $(CYGPATH_W) 'build_tsgraph.cc'; else $(CYGPATH_W) '$(srcdir)/build_tsgraph.cc'; fi`

decimate_sparse-decimate-sparse.o: decimate-sparse.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(decimate_sparse_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT decimate_sparse-decimate-sparse.o -MD -MP -MF "$(DEPDIR)/decimate_sparse-decimate-sparse.Tpo" -c -o decimate_sparse-decimate-sparse.o `test -f 'decimate-sparse.cc' || echo '$(srcdir)/'`decimate-sparse.cc; \
	then mv -f "$(DEPDIR)/decimate_sparse-decimate-sparse.Tpo" "$(DEPDIR)/decimate_sparse-decimate-sparse.Po"; else rm -f "$(DEPDIR)/decimate_sparse-decimate-sparse.Tpo"; exit 1; fi
#	source='decimate-sparse.cc' object='decimate_sparse-decimate-sparse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(decimate_sparse_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o decimate_sparse-decimate-sparse.o `test -f 'decimate-sparse.cc' || echo '$(srcdir)/'`decimate-sparse.cc

decimate_sparse-decimate-sparse.obj: decimate-sparse.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(decimate_sparse_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT decimate_sparse-decimate-sparse.obj -MD -MP -MF "$(DEPDIR)/decimate_sparse-decimate-sparse.Tpo" -c -o decimate_sparse-decimate-sparse.obj `if test -f 'decimate-sparse.cc'; then $(CYGPATH_W) 'decimate-sparse.cc'; else $(CYGPATH_W) '$(srcdir)/decimate-sparse.cc'; fi`; \
	then mv -f "$(DEPDIR)/decimate_sparse-decimate-sparse.Tpo" "$(DEPDIR)/decimate_sparse-decimate-sparse.Po"; else rm -f "$(DEPDIR)/decimate_sparse-decimate-sparse.Tpo"; exit 1; fi
#	source='decimate-sparse.cc' object='decimate_sparse-decimate-sparse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(decimate_sparse_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o decimate_sparse-decimate-sparse.obj `if test -f 'decimate-sparse.cc'; then $(CYGPATH_W) 'decimate-sparse.cc'; else $(CYGPATH_W) '$(srcdir)/decimate-sparse.cc'; fi`

find_tsSCC-find_tsSCC.o: find_tsSCC.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(find_tsSCC_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_tsSCC-find_tsSCC.o -MD -MP -MF "$(DEPDIR)/find_tsSCC-find_tsSCC.Tpo" -c -o find_tsSCC-find_tsSCC.o `test -f 'find_tsSCC.cc' || echo '$(srcdir)/'`find_tsSCC.cc; \
	then mv -f "$(DEPDIR)/find_tsSCC-find_tsSCC.Tpo" "$(DEPDIR)/find_tsSCC-find_tsSCC.Po"; else rm -f "$(DEPDIR)/find_tsSCC-find_tsSCC.Tpo"; exit 1; fi
#	source='find_tsSCC.cc' object='find_tsSCC-find_tsSCC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(find_tsSCC_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_tsSCC-find_tsSCC.o `test -f 'find_tsSCC.cc' || echo '$(srcdir)/'`find_tsSCC.cc

find_tsSCC-find_tsSCC.obj: find_tsSCC.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(find_tsSCC_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_tsSCC-find_tsSCC.obj -MD -MP -MF "$(DEPDIR)/find_tsSCC-find_tsSCC.Tpo" -c -o find_tsSCC-find_tsSCC.obj `if test -f 'find_tsSCC.cc'; then $(CYGPATH_W) 'find_tsSCC.cc'; else $(CYGPATH_W) '$(srcdir)/find_tsSCC.cc'; fi`; \
	then mv -f "$(DEPDIR)/find_tsSCC-find_tsSCC.Tpo" "$(DEPDIR)/find_tsSCC-find_tsSCC.Po"; else rm -f "$(DEPDIR)/find_tsSCC-find_tsSCC.Tpo"; exit 1; fi
#	source='find_tsSCC.cc' object='find_tsSCC-find_tsSCC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(find_tsSCC_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_tsSCC-find_tsSCC.obj `if test -f 'find_tsSCC.cc'; then $(CYGPATH_W) 'find_tsSCC.cc'; else $(CYGPATH_W) '$(srcdir)/find_tsSCC.cc'; fi`

partial_order-partial_order.o: partial_order.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partial_order_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT partial_order-partial_order.o -MD -MP -MF "$(DEPDIR)/partial_order-partial_order.Tpo" -c -o partial_order-partial_order.o `test -f 'partial_order.cc' || echo '$(srcdir)/'`partial_order.cc; \
	then mv -f "$(DEPDIR)/partial_order-partial_order.Tpo" "$(DEPDIR)/partial_order-partial_order.Po"; else rm -f "$(DEPDIR)/partial_order-partial_order.Tpo"; exit 1; fi
#	source='partial_order.cc' object='partial_order-partial_order.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partial_order_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o partial_order-partial_order.o `test -f 'partial_order.cc' || echo '$(srcdir)/'`partial_order.cc

partial_order-partial_order.obj: partial_order.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partial_order_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT partial_order-partial_order.obj -MD -MP -MF "$(DEPDIR)/partial_order-partial_order.Tpo" -c -o partial_order-partial_order.obj `if test -f 'partial_order.cc'; then $(CYGPATH_W) 'partial_order.cc'; else $(CYGPATH_W) '$(srcdir)/partial_order.cc'; fi`; \
	then mv -f "$(DEPDIR)/partial_order-partial_order.Tpo" "$(DEPDIR)/partial_order-partial_order.Po"; else rm -f "$(DEPDIR)/partial_order-partial_order.Tpo"; exit 1; fi
#	source='partial_order.cc' object='partial_order-partial_order.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partial_order_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o partial_order-partial_order.obj `if test -f 'partial_order.cc'; then $(CYGPATH_W) 'partial_order.cc'; else $(CYGPATH_W) '$(srcdir)/partial_order.cc'; fi`

uniform.o: sampling-plans/uniform.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uniform.o -MD -MP -MF "$(DEPDIR)/uniform.Tpo" -c -o uniform.o `test -f 'sampling-plans/uniform.cc' || echo '$(srcdir)/'`sampling-plans/uniform.cc; \
	then mv -f "$(DEPDIR)/uniform.Tpo" "$(DEPDIR)/uniform.Po"; else rm -f "$(DEPDIR)/uniform.Tpo"; exit 1; fi
#	source='sampling-plans/uniform.cc' object='uniform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uniform.o `test -f 'sampling-plans/uniform.cc' || echo '$(srcdir)/'`sampling-plans/uniform.cc

uniform.obj: sampling-plans/uniform.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uniform.obj -MD -MP -MF "$(DEPDIR)/uniform.Tpo" -c -o uniform.obj `if test -f 'sampling-plans/uniform.cc'; then $(CYGPATH_W) 'sampling-plans/uniform.cc'; else $(CYGPATH_W) '$(srcdir)/sampling-plans/uniform.cc'; fi`; \
	then mv -f "$(DEPDIR)/uniform.Tpo" "$(DEPDIR)/uniform.Po"; else rm -f "$(DEPDIR)/uniform.Tpo"; exit 1; fi
#	source='sampling-plans/uniform.cc' object='uniform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uniform.obj `if test -f 'sampling-plans/uniform.cc'; then $(CYGPATH_W) 'sampling-plans/uniform.cc'; else $(CYGPATH_W) '$(srcdir)/sampling-plans/uniform.cc'; fi`

sanity_check-sanity_check.o: sanity_check.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sanity_check_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sanity_check-sanity_check.o -MD -MP -MF "$(DEPDIR)/sanity_check-sanity_check.Tpo" -c -o sanity_check-sanity_check.o `test -f 'sanity_check.cc' || echo '$(srcdir)/'`sanity_check.cc; \
	then mv -f "$(DEPDIR)/sanity_check-sanity_check.Tpo" "$(DEPDIR)/sanity_check-sanity_check.Po"; else rm -f "$(DEPDIR)/sanity_check-sanity_check.Tpo"; exit 1; fi
#	source='sanity_check.cc' object='sanity_check-sanity_check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sanity_check_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sanity_check-sanity_check.o `test -f 'sanity_check.cc' || echo '$(srcdir)/'`sanity_check.cc

sanity_check-sanity_check.obj: sanity_check.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sanity_check_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sanity_check-sanity_check.obj -MD -MP -MF "$(DEPDIR)/sanity_check-sanity_check.Tpo" -c -o sanity_check-sanity_check.obj `if test -f 'sanity_check.cc'; then $(CYGPATH_W) 'sanity_check.cc'; else $(CYGPATH_W) '$(srcdir)/sanity_check.cc'; fi`; \
	then mv -f "$(DEPDIR)/sanity_check-sanity_check.Tpo" "$(DEPDIR)/sanity_check-sanity_check.Po"; else rm -f "$(DEPDIR)/sanity_check-sanity_check.Tpo"; exit 1; fi
#	source='sanity_check.cc' object='sanity_check-sanity_check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sanity_check_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sanity_check-sanity_check.obj `if test -f 'sanity_check.cc'; then $(CYGPATH_W) 'sanity_check.cc'; else $(CYGPATH_W) '$(srcdir)/sanity_check.cc'; fi`

sparsity_metrics-sparsity-metrics.o: sparsity-metrics.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sparsity_metrics_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sparsity_metrics-sparsity-metrics.o -MD -MP -MF "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Tpo" -c -o sparsity_metrics-sparsity-metrics.o `test -f 'sparsity-metrics.cc' || echo '$(srcdir)/'`sparsity-metrics.cc; \
	then mv -f "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Tpo" "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Po"; else rm -f "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Tpo"; exit 1; fi
#	source='sparsity-metrics.cc' object='sparsity_metrics-sparsity-metrics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sparsity_metrics_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sparsity_metrics-sparsity-metrics.o `test -f 'sparsity-metrics.cc' || echo '$(srcdir)/'`sparsity-metrics.cc

sparsity_metrics-sparsity-metrics.obj: sparsity-metrics.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sparsity_metrics_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sparsity_metrics-sparsity-metrics.obj -MD -MP -MF "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Tpo" -c -o sparsity_metrics-sparsity-metrics.obj `if test -f 'sparsity-metrics.cc'; then $(CYGPATH_W) 'sparsity-metrics.cc'; else $(CYGPATH_W) '$(srcdir)/sparsity-metrics.cc'; fi`; \
	then mv -f "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Tpo" "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Po"; else rm -f "$(DEPDIR)/sparsity_metrics-sparsity-metrics.Tpo"; exit 1; fi
#	source='sparsity-metrics.cc' object='sparsity_metrics-sparsity-metrics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sparsity_metrics_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sparsity_metrics-sparsity-metrics.obj `if test -f 'sparsity-metrics.cc'; then $(CYGPATH_W) 'sparsity-metrics.cc'; else $(CYGPATH_W) '$(srcdir)/sparsity-metrics.cc'; fi`

.ll.cc:
	$(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/sampling-plans
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) all-local
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f sampling-plans/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f convert_reports.cc
	-rm -f decimate-sparse.cc
	-rm -f extract_timestamps.cc
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am all-local check \
	check-am clean clean-generic clean-libtool \
	clean-noinstLIBRARIES clean-noinstPROGRAMS clean-recursive \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am


all-local: analysis-rules.mk
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
